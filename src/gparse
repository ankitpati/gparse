#!/usr/bin/env perl

use Mojolicious::Lite;
use Mojo::File qw(path);
use Unicode::UTF8 qw(decode_utf8);

use lib path(__FILE__)->sibling('lib/perl5')->to_string;

use GParse::Domain qw(all_as_hash);

sub clean_routes {
    my $extra = app->static->extra;
    delete $extra->{$_} foreach keys %$extra;
    return;
}

clean_routes;

app->renderer->add_handler (chars => sub {
    my ($renderer, $c, $output, $options) = @_;

    my $path = $renderer->template_path ($options)
        or die "$options->{template}.$options->{format}.$options->{handler}".
               ' not found on template path on the filesystem';

    my $cache = $renderer->cache;
    my $content = $cache->get ($path);
    unless (defined $content) {
        $content = decode_utf8 path($path)->slurp;
        $cache->set ($path => $content);
    }

    $$output = $content;
});

get '/*url' => sub {
    my $c = shift;

    my $url = $c->stash ('url');

    # Stringify query, as it is not picked up in `$url` on unencoded `GET`s.
    my $query = $c->req->params->to_string;
    $url .= "?$query" if $query;

    my %response = all_as_hash $url;

    # Convert Perl truthy/falsy values to JS booleans. Refer to `Mojo::JSON`.
    foreach (keys %response) {
        $response{$_} //= '';
        $response{$_} = $response{$_} ? \1 : \0 if /^is_\w+/;
    }

    $c->render (json => \%response);
};

get '/' => 'gparse';

app->start;

__END__
